http://localhost:8080/h2-console
실행 시켰을때 h2로 시작되는 콘솔에 있던 URL정보를 위에 주소에 입력하여 연결
(url주소는 실행시 매번 변경되는것 같음.)
콘솔 종료시 사용안됨
스태틱과 템플릿으로 관리
빌드 새로하면 기존에 해놨던것들 다 날라감



mustache 활용방법
JPA
@OneToOne
@OneToMany
@ManyToOne

jpaRepsitory method
@Pageable
@Query

Thymeleaf

- SPA(Single Page Application)

- Servlet/JSP 샘플 코드
Spring Boot - Thymleaf(MaterialUI,
 Bootstrap template) - JPA(querydsl) -

----------
REactJS
JSX, Component, state, props, hooks, router, redux

Spring Security
Authentication, JWT, OAuth2


인코드 외우기

다운로드때 코드 확인해보기

요청부분에서 한글깨짐 발생함.



ubuntu 기입 후
sudo mariadb -u root -p

use mysql;


create user '0000'@'%' identified by '1234';
ㄴ 새로 등록할 계정 등록/

초까지 나올때 초 단위가 9자리면 나노







컨트롤러 에서 아이디 만들기
return값에서 상위폴더로 이동해야함으로 슬러시 꼭 붙여야함

{{ }} 객체식표현
이터러블(?)/자체를 조건식으로 씀
{{#done}} {{/done}}
ㄴ평가식으로표현
괄호 3개가 되면 값을 안에 넣었을때 팝업메세지에 뜸

값이 존재하면 변화감지함 pk기준/ 존재하지않으면 인샙트(?)함
save:엔티티의 상태 저장

formaction
ㄴ폼 속성만 바꿔주는거/html꺼임

메서드 값만 바꿔주는건 formMethod

jpa persist
ㄴEntityManagerFactory를 통해서 생성을 받아옴
ㄴ실제 사용을위해 db쪽에 엑서스 하기위해서 땡겨옴
ㄴ해당역할을 히카리가 하고있음
ㄴ영속성: 엔티티를 영구 저장하는 환경
ㄴ매니저를통해 위임하는것 db에 저장하는게 아님
ㄴfilestream과 iostream차이는 직렬화의 뭐시기를 영속성으로
ㄴpersist가 끝나고 나서 db저장
(빌더할때 task가 키 혹은 메서드가 존재해야함/없으면 터짐 /다른쪽에서 쓸려면 누락된게 있으면안됌)
ㄴ조회 후 save가 기본
ㄴinmemory에 저장되어있음

비 영속성:new/transient
영속(managed):중간저장상태

준영속(detached)
ㄴ영속성 컨텐츠에서 분리된 상태

삭제(removed)
ㄴ 삭제된상태/DB에서도 날린다.

pk따라서감
ㄴ말이 안되면 터짐/논리적 타당성
ㄴpk가 적용되어야하는데/이상하게 넣거나 db에서 지원안하는경우




이전 사용법들:
ㄴ일렬로 저장하는걸 /시리얼라이즈라고 했었음/저장하려고/위치는 파일시스템에
/기본자료형으로 input, output스트림사용
ㄴsql사용하게되면 시리얼라이즈 작업이 별도로 필요 없던것.

ㄴ네트워크로 데이터를 보내게 되었을 때,json사용(리스트 순서는 보장,필드는 ㄴ상관)
ㄴ사이즈는 시리얼라이즈가 더 작음
ㄴBSON: 데이터 아끼려고 사용



JPQL
ㄴ엔티티 객체를 조회하는 객체지향 쿼리
ㄴ테이블을 대상으로 쿼리하는 것이 아니라 엔티티 객체를 대상으로 쿼리한다.
ㄴ섬세한 쿼리작성이 어렵다.
ㄴSQL추상화로 특정 벤더에 종속적이지 않음(맞는문법 사용)
ㄴ대소문자 구분(SELECT, FROM, AS 같은 JPQL 키워드는 대소문자를 구분하지 않아도 된다.)
ㄴ별칭 안써주면 터짐(필수임 /*대신 m 사용 )
ㄴ엔티티 이름은 @Entity(name="abcd")등 사용,name생략시 기본값으로 클래스이름 사용
ㄴ반환할 타입을 명확하게 지정할 수 있으면 TypedQuery 객체를, 명확하게 지정할 수 없으면 Query 객체를 사용한다.


Query에서 id값줄때 콜론 없으면 전체가 변경 값 등록



1.클래스변수의 기본값:0, null같은것
2.할당값
3.스태틱키워드 붙었던 초기화블럭(1,2,3 모두 스태틱)
4.i,v def
5.i,v ass
6.i 초기화 블럭
7.생성자
8.포스트 시점이후 

ㄴ최소 주입완료시점이후여야함./이니셜라이즈가 끝나진않은상태에서 진행시 터질 수 있음
ㄴ생성자 내부에 저장해야함

메모리 누수여부확인을 많이한다캄

  오늘 한것.
화면작업(부트스트랩)

BasicObject:
ㄴjstl?
ㄴ포멧터(pars date)
ㄴxml로도 사용
ㄴfn
ㄴ서블릿처리(이전엔 이렇게 처리)

태그의 속성
네임 스페이스:<C:> ,<th:>같은것
속성:<C:if>,<th:each>같이 : 뒤에온는것들이 속성

날짜관련으로 선언문 쓸 필요없다라는 장점이 있다.(ex)
<a th:href="@{/sample/exView(sno=${dto.sno}, first=${dto.first+dto.last})}">[[${dto}]]</a>

localDate type:
simpleDaye type:요구되는 날짜 데이터타입:문자로 정의되어있음

스코프에 인식함
Model, Attribute등



thymeleaf 레이아웃
1. jsp include
2. 파라미터 전달
th:insert
th:replace

리퀘스트 쉐어링:같은 리퀘스트를 쓴다, 같은 파라미터를 쓴다.
인클루드에서 쓴다.

인클루드 할때
사전정의를 Layout
실제 view에선 
header /에선 뭘 빼겠다 식으로
contents
footer

리퀘스트 정의서(URL) 작성
흐름정의서
쿼리dsl
대충 복잡한거 쓸때 좋음
------------------------------------
와이어프레임(화면설계/흐름설계)

--------글작성----------
-목록
-글쓰기버튼(폼으로 이동)
-view페이지 이동
-검색도 있어야함
-등록시 글등록
-조회:상세보기
-인증

--------수정---------
- 업데이트
-수정 후 뷰페이지로 이동 or 리스트로 이동(이번엔 리스트)


--------삭제-----------
-

------이름구분--------
-service개층/인터페이스로 구분
-java persistens api
-repasitory

--------------------

/없는상태에서만 인식함 만약에 /있는걸로하려면 컨트롤러 맵핑쪽에서 써줘야함"/"
----------------
엔티티작업(도메인쪽 작업)
개별필드에다가 작업해도 됌 (@CreatedDate,@LastModifiedDate)
ㄴ업데이트되면 자동으로 작업됨(ORM)
ㄴ마이바티스는 (SQL)
ㄴ엔티티 = 테이블이 될 예정




getMapping
등 쓰기


fragments:파편들
IOPS:순차형태

에뮬레이터()

fragment 페이지에서 한번에 작업
공통으로 만들기 편함

<div th:replace="~{/fragments/fragment1 }"></div>
콜론 뒤에를 내용을 빼면 빼면 페이지에 전체 내용이 나옴 ex: part1,2,3


save, saveAll은 영속화(insert됨)

get()을 호출시 가져오는 값이 Null이면 터짐

isPresent(): 호출시 아무것도 없으면 작동안함



챗지피티 물어볼때 좀 정확한 답 받을라면
1.현재 상황에 대한 코드를 먼저 붙이고, 현재 버전이 어떤건지 물하기
ex)스프링부트 3.4.1 ,빌드정보. ide를 현재 vscode(쓰고있는 개발도구)를 사용중이고,
적용기술은 000을 추가 하고싶어, 샘플소스는 생략하고 빌드 성공 할 수 있는가이드








